# Generated by roxygen2: do not edit by hand

S3method(close,local_client)
S3method(close,local_cluster)
S3method(isup,local_cluster)
S3method(length,local_cluster)
S3method(open,local_client)
S3method(open,local_cluster)
S3method(print,local_cluster)
S3method(print,recv_from)
S3method(recv,local_client)
S3method(recv_any,cluster)
S3method(recv_any,local_cluster)
S3method(recv_from,cluster)
S3method(recv_from,local_cluster)
S3method(send,local_client)
S3method(send_to,cluster)
S3method(send_to,local_cluster)
S3method(value,default)
S3method(value,list)
S3method(value,recv_from)
export(cluster)
export(isup)
export(local_client)
export(local_cluster)
export(recv)
export(recv_any)
export(recv_from)
export(send)
export(send_to)
export(value)
importClassesFrom(BiocParallel,BiocParallelParam)
importFrom(BiocParallel,.BiocParallelParam_prototype)
importFrom(BiocParallel,.bpstart_impl)
importFrom(BiocParallel,.bpstop_impl)
importFrom(BiocParallel,.bpworker_impl)
importFrom(BiocParallel,.close)
importFrom(BiocParallel,.error_worker_comm)
importFrom(BiocParallel,.prototype_update)
importFrom(BiocParallel,.recv)
importFrom(BiocParallel,.recv_any)
importFrom(BiocParallel,.send)
importFrom(BiocParallel,.send_to)
importFrom(BiocParallel,bpbackend)
importFrom(BiocParallel,bpisup)
importFrom(BiocParallel,bpschedule)
importFrom(BiocParallel,bpstart)
importFrom(BiocParallel,bpstop)
importFrom(methods,is)
importFrom(methods,new)
importFrom(parallel,detectCores)
importFrom(parallel,mcparallel)
useDynLib(socketeer, .registration=TRUE)
